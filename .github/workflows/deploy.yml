# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy website

on:
    workflow_dispatch:
        inputs:
            deploy-path:
                description: "Location to deploy"
                required: true
                default: triathlondetoulouse/master

jobs:
    build-and-test:
        name: Build and test
        runs-on: ubuntu-latest

        env:
          FILE_NAME: build_${GITHUB_SHA:0:7}.tar.gz

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Read .nvmrc
              id: read-nvmrc
              run: echo node-version=$(cat .nvmrc) >> $GITHUB_OUTPUT

            - name: Use Node.js version from .nvmrc
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ steps.read-nvmrc.outputs.node-version }}
                  cache: 'yarn'

            - name: Install dependencies
              run: yarn install --immutable

            - name: Build
              run: yarn build

            - name: Backup web
              uses: appleboy/ssh-action@v1.0.3
              with:
                host: ${{ secrets.SERVER_HOST }}
                username: ${{ secrets.SERVER_USERNAME }}
                password: ${{ secrets.SERVER_PASSWORD }}
                script: ./create_backup.sh ${{ github.event.inputs.deploy-path }}

            - name: build archive
              run: |
                tar -czf ${{ env.FILE_NAME }} --exclude="assets" -C ./dist/frontend .
                echo "Archive created: ${{ env.FILE_NAME }}"

            - name: upload file
              uses: appleboy/scp-action@master
              with:
                host: ${{ secrets.SERVER_HOST }}
                username: ${{ secrets.SERVER_USERNAME }}
                password: ${{ secrets.SERVER_PASSWORD }}
                source: ${{ env.FILE_NAME }}
                target: "backup"

            - name: Deploy
              uses: appleboy/ssh-action@v1.0.3
              with:
                host: ${{ secrets.SERVER_HOST }}
                username: ${{ secrets.SERVER_USERNAME }}
                password: ${{ secrets.SERVER_PASSWORD }}
                script: ./deploy_backup.sh ${{ env.FILE_NAME }} ${{ github.event.inputs.deploy-path }}
